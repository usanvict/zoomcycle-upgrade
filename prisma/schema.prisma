// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                 @id @default(autoincrement())
  email             String              @unique
  password          String
  name              String
  membership        MembershipType
  classes           SpinningClass[]
  ClassRegistration ClassRegistration[]

  @@map("participants")
}

model SpinningClass {
  id                Int                 @id @default(autoincrement())
  time              DateTime
  music             String
  language          String
  paidMembers       Int                 @default(0)
  walkIns           Int                 @default(0)
  participants      User[]
  ClassRegistration ClassRegistration[]
  Trainer           Trainer             @relation(fields: [trainerId], references: [id])
  trainerId         Int

  @@map("spinning_classes")
}

model ClassRegistration {
  participantId Int
  classId       Int
  registeredAt  DateTime @default(now())

  Participant   User          @relation(fields: [participantId], references: [id], onDelete: Cascade)
  SpinningClass SpinningClass @relation(fields: [classId], references: [id], onDelete: Cascade)

  @@id([participantId, classId])
  @@map("class_registrations")
}

enum MembershipType {
  PAID
  WALK_IN
}

model Trainer {
  id      Int             @id @default(autoincrement())
  email   String          @unique
  name    String
  classes SpinningClass[]

  @@map("trainers")
}
